#CD pipeline for dfa test branch public

name: test-project-public-build-push.yml

on:
  push:
    branches:
       - project-test

    paths:
      - "dfa-public/src/**"
      - ".github/workflows/test-project-public-build-push.yml"
  workflow_dispatch:

concurrency:
  group: test-build
  cancel-in-progress: false

env:
  UI_IMAGE_NAME: dfa-portal-ui-public
  API_IMAGE_NAME: dfa-portal-api-public
  PDF_IMAGE_NAME: dfa-portal-pdf-service
  UI_WORKING_DIRECTORY: ./dfa-public/src/UI
  API_WORKING_DIRECTORY: ./dfa-public/src/API
  PDF_WORKING_DIRECTORY: ./pdf-service
  IMAGE_TAG: test

jobs:
  build:
    runs-on: ubuntu-latest
  #  if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_PROJECT_REGISTRY }}
          username: ${{ secrets.DOCKER_PROJECT_USERNAME }}
          password: ${{ secrets.DOCKER_PROJECT_PASSWORD_BUILDER }}

      # Get SHORT_SHA to tag images
      - name: Get short SHA
        id: short_sha
        run: |
          echo "::set-output name=SHORT_SHA::$(git rev-parse --short HEAD)"
          echo "Short SHA: $SHORT_SHA"

      - name: Build UI Image
        working-directory: ${{env.UI_WORKING_DIRECTORY}}
        run: |
          docker build -t ${{env.UI_IMAGE_NAME}} .

      - name: Tag UI Image
        run: |
          docker tag ${{env.UI_IMAGE_NAME}} ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{env.UI_IMAGE_NAME}}:${{ env.IMAGE_TAG }}

      - name: Docker UI Push
        run: |
          docker push ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{env.UI_IMAGE_NAME}}:${{ env.IMAGE_TAG }}

      - name: Build API Image
        working-directory: ${{env.API_WORKING_DIRECTORY}}
        run: |
          docker build -t ${{env.API_IMAGE_NAME}} .

      - name: Tag API Image
        run: |
          docker tag ${{env.API_IMAGE_NAME}} ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{env.API_IMAGE_NAME}}:${{ env.IMAGE_TAG }}

      - name: Docker API Push
        run: |
          docker push ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{env.API_IMAGE_NAME}}:${{ env.IMAGE_TAG }}

      - name: Build PDF Image
        working-directory: ${{env.PDF_WORKING_DIRECTORY}}
        run: |
          docker build -t ${{env.PDF_IMAGE_NAME}} .

      - name: Tag PDF Image
        run: |
          docker tag ${{env.PDF_IMAGE_NAME}} ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{env.PDF_IMAGE_NAME}}:${{ env.IMAGE_TAG }}

      - name: Docker PDF Push
        run: |
          docker push ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{env.PDF_IMAGE_NAME}}:${{ env.IMAGE_TAG }}

  
      
     
      - name: Checkout ArgoCD Repo
        id: gitops
        uses: actions/checkout@v4
        with:
          repository: bcgov-c/tenant-gitops-c2ee1a
          ref: test
          token: ${{ secrets.GITOPS_KEY }} # `GH_PAT` is a secret that contains your PAT
          path: gitops

      - name: Update Helm values in gitops
        id: helm
        if: steps.gitops.outcome == 'success'  # Only run if the previous step (publish) was successful
        run: |
          # Clone the GitOps deployment configuration repository
          # Navigate to the directory containing your Helm values file for the environment develop -> DEV, test -> test and 
          cd gitops/charts
          
          # Update the Helm values file with the new image tag and version
          DATETIME=$(date +'%Y-%m-%d %H:%M:%S')  # Get current date and time
          
          sed -i  "s/apipubtag: .*/apipubtag: test # Image Updated on $DATETIME/" ../deploy/test_public_values.yaml
          sed -i  "s/apipubversion: .*/apipubversion: v-${{ steps.short_sha.outputs.SHORT_SHA }} # Version Updated on $DATETIME/" ../deploy/test_public_values.yaml

          sed -i  "s/uipubtag: .*/uipubtag: test # Image Updated on $DATETIME/" ../deploy/test_public_values.yaml
          sed -i  "s/uipubversion: .*/uipubversion: v-${{ steps.short_sha.outputs.SHORT_SHA }} # Version Updated on $DATETIME/" ../deploy/test_public_values.yaml

          sed -i  "s/pdftag: .*/pdftag: dev # Image Updated on $DATETIME/" ../deploy/test_public_values.yaml
          sed -i  "s/pdfversion: .*/pdfversion: v-${{ steps.short_sha.outputs.SHORT_SHA }} # Version Updated on $DATETIME/" ../deploy/test_public_values.yaml

          # Commit and push the changes
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"


          git add ../deploy/test_public_values.yaml

          # Repackage Helm Chart

          cd dfa-gitops-public

          helm dependency build

          cd charts

          git add .

          git commit -m "Update Test Public API and UI image tag"
          git push origin test  # Update the branch name as needed